// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`poll options (form) should match snapshot (poll input) 1`] = `
<div
  className="c-poll-options"
>
  <PollInput
    actions={
      Object {
        "formAddOption": [MockFunction],
        "formClearState": [MockFunction],
        "formRemoveOption": [MockFunction],
        "formSetAdd": [MockFunction],
        "formSetTitle": [MockFunction],
        "formToggleDelete": [MockFunction],
        "formToggleSecret": [MockFunction],
        "listClearState": [MockFunction],
        "listSetSearch": [MockFunction],
        "metaAddErrors": [MockFunction],
        "metaCloseError": [MockFunction],
        "metaCreatePoll": [MockFunction],
        "metaDeletePoll": [MockFunction],
        "metaGetPolls": [MockFunction],
        "metaGetUser": [MockFunction],
        "metaNoOp": [MockFunction],
        "metaSetLoading": [MockFunction],
        "metaSetState": [MockFunction],
        "metaTimeoutError": [MockFunction],
        "metaToggleDelete": [MockFunction],
        "pollAddOption": [MockFunction],
        "pollCastVote": [MockFunction],
        "pollRemoveOption": [MockFunction],
        "pollToggleFlag": [MockFunction],
        "pollToggleHide": [MockFunction],
        "pollToggleSecret": [MockFunction],
        "viewClearState": [MockFunction],
        "viewSetAdd": [MockFunction],
        "viewToggleDelete": [MockFunction],
        "viewToggleSettings": [MockFunction],
      }
    }
    data={
      Object {
        "errors": Array [],
        "form": Object {
          "add": "",
          "delete": false,
          "options": Array [],
          "secret": false,
          "title": "",
        },
        "list": Object {
          "search": "",
        },
        "loading": 0,
        "meta": Object {
          "delete": false,
        },
        "polls": Array [],
        "user": Object {
          "auth": Object {
            "id": "",
            "provider": "",
          },
          "data": Object {
            "restricted": false,
          },
          "id": "",
          "name": "",
          "type": "auth",
        },
        "view": Object {
          "add": "",
          "delete": false,
          "settings": false,
        },
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    local={
      Object {
        "poll": Object {
          "add": "",
          "delete": false,
          "options": Array [],
          "secret": false,
          "title": "",
        },
        "role": "form",
      }
    }
    location={Object {}}
    match={Object {}}
    staticContext={Object {}}
  />
</div>
`;

exports[`poll options (form) should match snapshot (poll list) 1`] = `
<div
  className="c-poll-options"
>
  <PollList
    actions={
      Object {
        "formAddOption": [MockFunction],
        "formClearState": [MockFunction],
        "formRemoveOption": [MockFunction],
        "formSetAdd": [MockFunction],
        "formSetTitle": [MockFunction],
        "formToggleDelete": [MockFunction],
        "formToggleSecret": [MockFunction],
        "listClearState": [MockFunction],
        "listSetSearch": [MockFunction],
        "metaAddErrors": [MockFunction],
        "metaCloseError": [MockFunction],
        "metaCreatePoll": [MockFunction],
        "metaDeletePoll": [MockFunction],
        "metaGetPolls": [MockFunction],
        "metaGetUser": [MockFunction],
        "metaNoOp": [MockFunction],
        "metaSetLoading": [MockFunction],
        "metaSetState": [MockFunction],
        "metaTimeoutError": [MockFunction],
        "metaToggleDelete": [MockFunction],
        "pollAddOption": [MockFunction],
        "pollCastVote": [MockFunction],
        "pollRemoveOption": [MockFunction],
        "pollToggleFlag": [MockFunction],
        "pollToggleHide": [MockFunction],
        "pollToggleSecret": [MockFunction],
        "viewClearState": [MockFunction],
        "viewSetAdd": [MockFunction],
        "viewToggleDelete": [MockFunction],
        "viewToggleSettings": [MockFunction],
      }
    }
    data={
      Object {
        "errors": Array [],
        "form": Object {
          "add": "",
          "delete": false,
          "options": Array [],
          "secret": false,
          "title": "",
        },
        "list": Object {
          "search": "",
        },
        "loading": 0,
        "meta": Object {
          "delete": false,
        },
        "polls": Array [],
        "user": Object {},
        "view": Object {
          "add": "",
          "delete": false,
          "settings": false,
        },
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    local={
      Object {
        "poll": Object {
          "add": "",
          "delete": false,
          "options": Array [
            "Option A",
          ],
          "secret": false,
          "title": "",
        },
        "role": "form",
      }
    }
    location={Object {}}
    match={Object {}}
    staticContext={Object {}}
  />
</div>
`;

exports[`poll options (form) should match snapshot 1`] = `""`;

exports[`poll options (view) should match snapshot (poll input) 1`] = `
<div
  className="c-poll-options"
>
  <PollInput
    actions={
      Object {
        "formAddOption": [MockFunction],
        "formClearState": [MockFunction],
        "formRemoveOption": [MockFunction],
        "formSetAdd": [MockFunction],
        "formSetTitle": [MockFunction],
        "formToggleDelete": [MockFunction],
        "formToggleSecret": [MockFunction],
        "listClearState": [MockFunction],
        "listSetSearch": [MockFunction],
        "metaAddErrors": [MockFunction],
        "metaCloseError": [MockFunction],
        "metaCreatePoll": [MockFunction],
        "metaDeletePoll": [MockFunction],
        "metaGetPolls": [MockFunction],
        "metaGetUser": [MockFunction],
        "metaNoOp": [MockFunction],
        "metaSetLoading": [MockFunction],
        "metaSetState": [MockFunction],
        "metaTimeoutError": [MockFunction],
        "metaToggleDelete": [MockFunction],
        "pollAddOption": [MockFunction],
        "pollCastVote": [MockFunction],
        "pollRemoveOption": [MockFunction],
        "pollToggleFlag": [MockFunction],
        "pollToggleHide": [MockFunction],
        "pollToggleSecret": [MockFunction],
        "viewClearState": [MockFunction],
        "viewSetAdd": [MockFunction],
        "viewToggleDelete": [MockFunction],
        "viewToggleSettings": [MockFunction],
      }
    }
    data={
      Object {
        "errors": Array [],
        "form": Object {
          "add": "",
          "delete": false,
          "options": Array [],
          "secret": false,
          "title": "",
        },
        "list": Object {
          "search": "",
        },
        "loading": 0,
        "meta": Object {
          "delete": false,
        },
        "polls": Array [
          Object {
            "author": "",
            "date": 0,
            "id": "id-a",
            "options": Array [],
            "secret": false,
            "title": "",
            "users": Object {
              "created": "",
              "flagged": Array [],
              "hidden": Array [],
              "voted": 0,
            },
          },
        ],
        "user": Object {
          "auth": Object {
            "id": "",
            "provider": "",
          },
          "data": Object {
            "restricted": false,
          },
          "id": "",
          "name": "",
          "type": "auth",
        },
        "view": Object {
          "add": "",
          "delete": false,
          "settings": false,
        },
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    local={
      Object {
        "poll": Object {
          "author": "",
          "date": 0,
          "id": "id-a",
          "options": Array [],
          "secret": false,
          "title": "",
          "users": Object {
            "created": "",
            "flagged": Array [],
            "hidden": Array [],
            "voted": 0,
          },
        },
        "role": "view",
      }
    }
    location={Object {}}
    match={Object {}}
    staticContext={Object {}}
  />
</div>
`;

exports[`poll options (view) should match snapshot (poll list) 1`] = `
<div
  className="c-poll-options"
>
  <PollList
    actions={
      Object {
        "formAddOption": [MockFunction],
        "formClearState": [MockFunction],
        "formRemoveOption": [MockFunction],
        "formSetAdd": [MockFunction],
        "formSetTitle": [MockFunction],
        "formToggleDelete": [MockFunction],
        "formToggleSecret": [MockFunction],
        "listClearState": [MockFunction],
        "listSetSearch": [MockFunction],
        "metaAddErrors": [MockFunction],
        "metaCloseError": [MockFunction],
        "metaCreatePoll": [MockFunction],
        "metaDeletePoll": [MockFunction],
        "metaGetPolls": [MockFunction],
        "metaGetUser": [MockFunction],
        "metaNoOp": [MockFunction],
        "metaSetLoading": [MockFunction],
        "metaSetState": [MockFunction],
        "metaTimeoutError": [MockFunction],
        "metaToggleDelete": [MockFunction],
        "pollAddOption": [MockFunction],
        "pollCastVote": [MockFunction],
        "pollRemoveOption": [MockFunction],
        "pollToggleFlag": [MockFunction],
        "pollToggleHide": [MockFunction],
        "pollToggleSecret": [MockFunction],
        "viewClearState": [MockFunction],
        "viewSetAdd": [MockFunction],
        "viewToggleDelete": [MockFunction],
        "viewToggleSettings": [MockFunction],
      }
    }
    data={
      Object {
        "errors": Array [],
        "form": Object {
          "add": "",
          "delete": false,
          "options": Array [],
          "secret": false,
          "title": "",
        },
        "list": Object {
          "search": "",
        },
        "loading": 0,
        "meta": Object {
          "delete": false,
        },
        "polls": Array [],
        "user": Object {},
        "view": Object {
          "add": "",
          "delete": false,
          "settings": false,
        },
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    local={
      Object {
        "poll": Object {
          "author": "",
          "date": 0,
          "id": "",
          "options": Array [
            Object {
              "created": "",
              "text": "",
              "voted": Array [],
            },
          ],
          "secret": false,
          "title": "",
          "users": Object {
            "created": "",
            "flagged": Array [],
            "hidden": Array [],
            "voted": 0,
          },
        },
        "role": "view",
      }
    }
    location={Object {}}
    match={Object {}}
    staticContext={Object {}}
  />
</div>
`;

exports[`poll options (view) should match snapshot 1`] = `""`;
