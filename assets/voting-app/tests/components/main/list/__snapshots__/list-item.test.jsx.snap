// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`list item should match snapshot (10^3 votes) 1`] = `
<tr>
  <td>
    <PollToggle
      actions={
        Object {
          "formAddOption": [MockFunction],
          "formClearState": [MockFunction],
          "formRemoveOption": [MockFunction],
          "formSetAdd": [MockFunction],
          "formSetTitle": [MockFunction],
          "formToggleConfirm": [MockFunction],
          "formToggleSecret": [MockFunction],
          "listClearState": [MockFunction],
          "listSetSearch": [MockFunction],
          "metaAddErrors": [MockFunction],
          "metaCloseError": [MockFunction],
          "metaCreatePoll": [MockFunction],
          "metaDeletePoll": [MockFunction],
          "metaGetPolls": [MockFunction],
          "metaGetUser": [MockFunction],
          "metaNoOp": [MockFunction],
          "metaSetLoading": [MockFunction],
          "metaSetState": [MockFunction],
          "metaTimeoutError": [MockFunction],
          "pollAddOption": [MockFunction],
          "pollCastVote": [MockFunction],
          "pollRemoveOption": [MockFunction],
          "pollToggleFlag": [MockFunction],
          "pollToggleHide": [MockFunction],
          "pollToggleSecret": [MockFunction],
          "viewClearState": [MockFunction],
          "viewSetAdd": [MockFunction],
          "viewToggleConfirm": [MockFunction],
          "viewToggleSettings": [MockFunction],
        }
      }
      data={
        Object {
          "errors": Array [],
          "form": Object {
            "add": "",
            "confirm": false,
            "options": Array [],
            "secret": false,
            "title": "",
          },
          "list": Object {
            "search": "",
          },
          "loading": 0,
          "polls": Array [],
          "user": Object {},
          "view": Object {
            "add": "",
            "confirm": false,
            "settings": false,
          },
        }
      }
      history={
        Object {
          "push": [MockFunction],
        }
      }
      local={
        Object {
          "list": true,
          "poll": Object {
            "author": "",
            "date": 0,
            "id": "id-a",
            "options": Array [],
            "secret": false,
            "title": "Title A",
            "users": Object {
              "created": "",
              "flagged": Array [],
              "hidden": Array [],
              "voted": 1000,
            },
          },
          "role": "hide",
        }
      }
      location={Object {}}
      match={Object {}}
      staticContext={Object {}}
    />
  </td>
  <td
    className="u-cursor-pointer"
  >
    <Link
      to="/view?id=id-a"
    >
      <p>
        Title A
      </p>
      <p
        className="u-no-margin"
      >
        1K Votes — 31 December 1969
      </p>
    </Link>
  </td>
</tr>
`;

exports[`list item should match snapshot (10^6 votes) 1`] = `
<tr>
  <td>
    <PollToggle
      actions={
        Object {
          "formAddOption": [MockFunction],
          "formClearState": [MockFunction],
          "formRemoveOption": [MockFunction],
          "formSetAdd": [MockFunction],
          "formSetTitle": [MockFunction],
          "formToggleConfirm": [MockFunction],
          "formToggleSecret": [MockFunction],
          "listClearState": [MockFunction],
          "listSetSearch": [MockFunction],
          "metaAddErrors": [MockFunction],
          "metaCloseError": [MockFunction],
          "metaCreatePoll": [MockFunction],
          "metaDeletePoll": [MockFunction],
          "metaGetPolls": [MockFunction],
          "metaGetUser": [MockFunction],
          "metaNoOp": [MockFunction],
          "metaSetLoading": [MockFunction],
          "metaSetState": [MockFunction],
          "metaTimeoutError": [MockFunction],
          "pollAddOption": [MockFunction],
          "pollCastVote": [MockFunction],
          "pollRemoveOption": [MockFunction],
          "pollToggleFlag": [MockFunction],
          "pollToggleHide": [MockFunction],
          "pollToggleSecret": [MockFunction],
          "viewClearState": [MockFunction],
          "viewSetAdd": [MockFunction],
          "viewToggleConfirm": [MockFunction],
          "viewToggleSettings": [MockFunction],
        }
      }
      data={
        Object {
          "errors": Array [],
          "form": Object {
            "add": "",
            "confirm": false,
            "options": Array [],
            "secret": false,
            "title": "",
          },
          "list": Object {
            "search": "",
          },
          "loading": 0,
          "polls": Array [],
          "user": Object {},
          "view": Object {
            "add": "",
            "confirm": false,
            "settings": false,
          },
        }
      }
      history={
        Object {
          "push": [MockFunction],
        }
      }
      local={
        Object {
          "list": true,
          "poll": Object {
            "author": "",
            "date": 0,
            "id": "id-a",
            "options": Array [],
            "secret": false,
            "title": "Title A",
            "users": Object {
              "created": "",
              "flagged": Array [],
              "hidden": Array [],
              "voted": 1000000,
            },
          },
          "role": "hide",
        }
      }
      location={Object {}}
      match={Object {}}
      staticContext={Object {}}
    />
  </td>
  <td
    className="u-cursor-pointer"
  >
    <Link
      to="/view?id=id-a"
    >
      <p>
        Title A
      </p>
      <p
        className="u-no-margin"
      >
        1M Votes — 31 December 1969
      </p>
    </Link>
  </td>
</tr>
`;

exports[`list item should match snapshot (10^9 votes) 1`] = `
<tr>
  <td>
    <PollToggle
      actions={
        Object {
          "formAddOption": [MockFunction],
          "formClearState": [MockFunction],
          "formRemoveOption": [MockFunction],
          "formSetAdd": [MockFunction],
          "formSetTitle": [MockFunction],
          "formToggleConfirm": [MockFunction],
          "formToggleSecret": [MockFunction],
          "listClearState": [MockFunction],
          "listSetSearch": [MockFunction],
          "metaAddErrors": [MockFunction],
          "metaCloseError": [MockFunction],
          "metaCreatePoll": [MockFunction],
          "metaDeletePoll": [MockFunction],
          "metaGetPolls": [MockFunction],
          "metaGetUser": [MockFunction],
          "metaNoOp": [MockFunction],
          "metaSetLoading": [MockFunction],
          "metaSetState": [MockFunction],
          "metaTimeoutError": [MockFunction],
          "pollAddOption": [MockFunction],
          "pollCastVote": [MockFunction],
          "pollRemoveOption": [MockFunction],
          "pollToggleFlag": [MockFunction],
          "pollToggleHide": [MockFunction],
          "pollToggleSecret": [MockFunction],
          "viewClearState": [MockFunction],
          "viewSetAdd": [MockFunction],
          "viewToggleConfirm": [MockFunction],
          "viewToggleSettings": [MockFunction],
        }
      }
      data={
        Object {
          "errors": Array [],
          "form": Object {
            "add": "",
            "confirm": false,
            "options": Array [],
            "secret": false,
            "title": "",
          },
          "list": Object {
            "search": "",
          },
          "loading": 0,
          "polls": Array [],
          "user": Object {},
          "view": Object {
            "add": "",
            "confirm": false,
            "settings": false,
          },
        }
      }
      history={
        Object {
          "push": [MockFunction],
        }
      }
      local={
        Object {
          "list": true,
          "poll": Object {
            "author": "",
            "date": 0,
            "id": "id-a",
            "options": Array [],
            "secret": false,
            "title": "Title A",
            "users": Object {
              "created": "",
              "flagged": Array [],
              "hidden": Array [],
              "voted": 1000000000,
            },
          },
          "role": "hide",
        }
      }
      location={Object {}}
      match={Object {}}
      staticContext={Object {}}
    />
  </td>
  <td
    className="u-cursor-pointer"
  >
    <Link
      to="/view?id=id-a"
    >
      <p>
        Title A
      </p>
      <p
        className="u-no-margin"
      >
        ??? Votes — 31 December 1969
      </p>
    </Link>
  </td>
</tr>
`;

exports[`list item should match snapshot (authenticated) 1`] = `
<tr>
  <td>
    <PollToggle
      actions={
        Object {
          "formAddOption": [MockFunction],
          "formClearState": [MockFunction],
          "formRemoveOption": [MockFunction],
          "formSetAdd": [MockFunction],
          "formSetTitle": [MockFunction],
          "formToggleConfirm": [MockFunction],
          "formToggleSecret": [MockFunction],
          "listClearState": [MockFunction],
          "listSetSearch": [MockFunction],
          "metaAddErrors": [MockFunction],
          "metaCloseError": [MockFunction],
          "metaCreatePoll": [MockFunction],
          "metaDeletePoll": [MockFunction],
          "metaGetPolls": [MockFunction],
          "metaGetUser": [MockFunction],
          "metaNoOp": [MockFunction],
          "metaSetLoading": [MockFunction],
          "metaSetState": [MockFunction],
          "metaTimeoutError": [MockFunction],
          "pollAddOption": [MockFunction],
          "pollCastVote": [MockFunction],
          "pollRemoveOption": [MockFunction],
          "pollToggleFlag": [MockFunction],
          "pollToggleHide": [MockFunction],
          "pollToggleSecret": [MockFunction],
          "viewClearState": [MockFunction],
          "viewSetAdd": [MockFunction],
          "viewToggleConfirm": [MockFunction],
          "viewToggleSettings": [MockFunction],
        }
      }
      data={
        Object {
          "errors": Array [],
          "form": Object {
            "add": "",
            "confirm": false,
            "options": Array [],
            "secret": false,
            "title": "",
          },
          "list": Object {
            "search": "",
          },
          "loading": 0,
          "polls": Array [],
          "user": Object {
            "auth": Object {
              "id": "",
              "provider": "",
            },
            "data": Object {
              "restricted": false,
            },
            "id": "",
            "name": "",
            "type": "auth",
          },
          "view": Object {
            "add": "",
            "confirm": false,
            "settings": false,
          },
        }
      }
      history={
        Object {
          "push": [MockFunction],
        }
      }
      local={
        Object {
          "list": true,
          "poll": Object {
            "author": "",
            "date": 0,
            "id": "id-a",
            "options": Array [],
            "secret": false,
            "title": "Title A",
            "users": Object {
              "created": "",
              "flagged": Array [],
              "hidden": Array [],
              "voted": 0,
            },
          },
          "role": "hide",
        }
      }
      location={Object {}}
      match={Object {}}
      staticContext={Object {}}
    />
  </td>
  <td>
    <PollToggle
      actions={
        Object {
          "formAddOption": [MockFunction],
          "formClearState": [MockFunction],
          "formRemoveOption": [MockFunction],
          "formSetAdd": [MockFunction],
          "formSetTitle": [MockFunction],
          "formToggleConfirm": [MockFunction],
          "formToggleSecret": [MockFunction],
          "listClearState": [MockFunction],
          "listSetSearch": [MockFunction],
          "metaAddErrors": [MockFunction],
          "metaCloseError": [MockFunction],
          "metaCreatePoll": [MockFunction],
          "metaDeletePoll": [MockFunction],
          "metaGetPolls": [MockFunction],
          "metaGetUser": [MockFunction],
          "metaNoOp": [MockFunction],
          "metaSetLoading": [MockFunction],
          "metaSetState": [MockFunction],
          "metaTimeoutError": [MockFunction],
          "pollAddOption": [MockFunction],
          "pollCastVote": [MockFunction],
          "pollRemoveOption": [MockFunction],
          "pollToggleFlag": [MockFunction],
          "pollToggleHide": [MockFunction],
          "pollToggleSecret": [MockFunction],
          "viewClearState": [MockFunction],
          "viewSetAdd": [MockFunction],
          "viewToggleConfirm": [MockFunction],
          "viewToggleSettings": [MockFunction],
        }
      }
      data={
        Object {
          "errors": Array [],
          "form": Object {
            "add": "",
            "confirm": false,
            "options": Array [],
            "secret": false,
            "title": "",
          },
          "list": Object {
            "search": "",
          },
          "loading": 0,
          "polls": Array [],
          "user": Object {
            "auth": Object {
              "id": "",
              "provider": "",
            },
            "data": Object {
              "restricted": false,
            },
            "id": "",
            "name": "",
            "type": "auth",
          },
          "view": Object {
            "add": "",
            "confirm": false,
            "settings": false,
          },
        }
      }
      history={
        Object {
          "push": [MockFunction],
        }
      }
      local={
        Object {
          "list": true,
          "poll": Object {
            "author": "",
            "date": 0,
            "id": "id-a",
            "options": Array [],
            "secret": false,
            "title": "Title A",
            "users": Object {
              "created": "",
              "flagged": Array [],
              "hidden": Array [],
              "voted": 0,
            },
          },
          "role": "flag",
        }
      }
      location={Object {}}
      match={Object {}}
      staticContext={Object {}}
    />
  </td>
  <td
    className="u-cursor-pointer"
  >
    <Link
      to="/view?id=id-a"
    >
      <p>
        Title A
      </p>
      <p
        className="u-no-margin"
      >
        0 Votes — 31 December 1969
      </p>
    </Link>
  </td>
</tr>
`;

exports[`list item should match snapshot (default) 1`] = `
<tr>
  <td>
    <PollToggle
      actions={
        Object {
          "formAddOption": [MockFunction],
          "formClearState": [MockFunction],
          "formRemoveOption": [MockFunction],
          "formSetAdd": [MockFunction],
          "formSetTitle": [MockFunction],
          "formToggleConfirm": [MockFunction],
          "formToggleSecret": [MockFunction],
          "listClearState": [MockFunction],
          "listSetSearch": [MockFunction],
          "metaAddErrors": [MockFunction],
          "metaCloseError": [MockFunction],
          "metaCreatePoll": [MockFunction],
          "metaDeletePoll": [MockFunction],
          "metaGetPolls": [MockFunction],
          "metaGetUser": [MockFunction],
          "metaNoOp": [MockFunction],
          "metaSetLoading": [MockFunction],
          "metaSetState": [MockFunction],
          "metaTimeoutError": [MockFunction],
          "pollAddOption": [MockFunction],
          "pollCastVote": [MockFunction],
          "pollRemoveOption": [MockFunction],
          "pollToggleFlag": [MockFunction],
          "pollToggleHide": [MockFunction],
          "pollToggleSecret": [MockFunction],
          "viewClearState": [MockFunction],
          "viewSetAdd": [MockFunction],
          "viewToggleConfirm": [MockFunction],
          "viewToggleSettings": [MockFunction],
        }
      }
      data={
        Object {
          "errors": Array [],
          "form": Object {
            "add": "",
            "confirm": false,
            "options": Array [],
            "secret": false,
            "title": "",
          },
          "list": Object {
            "search": "",
          },
          "loading": 0,
          "polls": Array [],
          "user": Object {},
          "view": Object {
            "add": "",
            "confirm": false,
            "settings": false,
          },
        }
      }
      history={
        Object {
          "push": [MockFunction],
        }
      }
      local={
        Object {
          "list": true,
          "poll": Object {
            "author": "",
            "date": 0,
            "id": "id-a",
            "options": Array [],
            "secret": false,
            "title": "Title A",
            "users": Object {
              "created": "",
              "flagged": Array [],
              "hidden": Array [],
              "voted": 0,
            },
          },
          "role": "hide",
        }
      }
      location={Object {}}
      match={Object {}}
      staticContext={Object {}}
    />
  </td>
  <td
    className="u-cursor-pointer"
  >
    <Link
      to="/view?id=id-a"
    >
      <p>
        Title A
      </p>
      <p
        className="u-no-margin"
      >
        0 Votes — 31 December 1969
      </p>
    </Link>
  </td>
</tr>
`;
