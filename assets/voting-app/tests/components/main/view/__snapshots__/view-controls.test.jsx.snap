// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`view controls should match snapshot (authenticated) 1`] = `
<div
  className="c-view-menu__display-box u-flex-right"
>
  <button
    className="c-view-menu__toggle-btn qa-share-poll"
    onClick={[Function]}
  >
    Share
  </button>
  <div
    className="c-view-menu__toggle-btn"
  >
    <PollToggle
      actions={
        Object {
          "formAddOption": [MockFunction],
          "formClearState": [MockFunction],
          "formRemoveOption": [MockFunction],
          "formSetAdd": [MockFunction],
          "formSetTitle": [MockFunction],
          "formToggleConfirm": [MockFunction],
          "formToggleSecret": [MockFunction],
          "listClearState": [MockFunction],
          "listSetSearch": [MockFunction],
          "metaAddErrors": [MockFunction],
          "metaCloseError": [MockFunction],
          "metaCreatePoll": [MockFunction],
          "metaDeletePoll": [MockFunction],
          "metaGetPolls": [MockFunction],
          "metaGetUser": [MockFunction],
          "metaNoOp": [MockFunction],
          "metaSetLoading": [MockFunction],
          "metaSetState": [MockFunction],
          "metaTimeoutError": [MockFunction],
          "pollAddOption": [MockFunction],
          "pollCastVote": [MockFunction],
          "pollRemoveOption": [MockFunction],
          "pollToggleFlag": [MockFunction],
          "pollToggleHide": [MockFunction],
          "pollToggleSecret": [MockFunction],
          "viewClearState": [MockFunction],
          "viewSetAdd": [MockFunction],
          "viewToggleConfirm": [MockFunction],
          "viewToggleSettings": [MockFunction],
        }
      }
      data={
        Object {
          "errors": Array [],
          "form": Object {
            "add": "",
            "confirm": false,
            "options": Array [],
            "secret": false,
            "title": "",
          },
          "list": Object {
            "search": "",
          },
          "loading": 0,
          "polls": Array [],
          "user": Object {
            "auth": Object {
              "id": "",
              "provider": "",
            },
            "data": Object {
              "restricted": false,
            },
            "id": "",
            "name": "",
            "type": "auth",
          },
          "view": Object {
            "add": "",
            "confirm": false,
            "settings": false,
          },
        }
      }
      history={
        Object {
          "push": [MockFunction],
        }
      }
      local={
        Object {
          "poll": Object {
            "author": "",
            "date": 0,
            "id": "",
            "options": Array [],
            "secret": false,
            "title": "",
            "users": Object {
              "created": "",
              "flagged": Array [],
              "hidden": Array [],
              "voted": 0,
            },
          },
          "role": "hide",
        }
      }
      location={Object {}}
      match={Object {}}
      staticContext={Object {}}
    />
  </div>
  <div
    className="c-view-menu__toggle-btn"
  >
    <PollToggle
      actions={
        Object {
          "formAddOption": [MockFunction],
          "formClearState": [MockFunction],
          "formRemoveOption": [MockFunction],
          "formSetAdd": [MockFunction],
          "formSetTitle": [MockFunction],
          "formToggleConfirm": [MockFunction],
          "formToggleSecret": [MockFunction],
          "listClearState": [MockFunction],
          "listSetSearch": [MockFunction],
          "metaAddErrors": [MockFunction],
          "metaCloseError": [MockFunction],
          "metaCreatePoll": [MockFunction],
          "metaDeletePoll": [MockFunction],
          "metaGetPolls": [MockFunction],
          "metaGetUser": [MockFunction],
          "metaNoOp": [MockFunction],
          "metaSetLoading": [MockFunction],
          "metaSetState": [MockFunction],
          "metaTimeoutError": [MockFunction],
          "pollAddOption": [MockFunction],
          "pollCastVote": [MockFunction],
          "pollRemoveOption": [MockFunction],
          "pollToggleFlag": [MockFunction],
          "pollToggleHide": [MockFunction],
          "pollToggleSecret": [MockFunction],
          "viewClearState": [MockFunction],
          "viewSetAdd": [MockFunction],
          "viewToggleConfirm": [MockFunction],
          "viewToggleSettings": [MockFunction],
        }
      }
      data={
        Object {
          "errors": Array [],
          "form": Object {
            "add": "",
            "confirm": false,
            "options": Array [],
            "secret": false,
            "title": "",
          },
          "list": Object {
            "search": "",
          },
          "loading": 0,
          "polls": Array [],
          "user": Object {
            "auth": Object {
              "id": "",
              "provider": "",
            },
            "data": Object {
              "restricted": false,
            },
            "id": "",
            "name": "",
            "type": "auth",
          },
          "view": Object {
            "add": "",
            "confirm": false,
            "settings": false,
          },
        }
      }
      history={
        Object {
          "push": [MockFunction],
        }
      }
      local={
        Object {
          "poll": Object {
            "author": "",
            "date": 0,
            "id": "",
            "options": Array [],
            "secret": false,
            "title": "",
            "users": Object {
              "created": "",
              "flagged": Array [],
              "hidden": Array [],
              "voted": 0,
            },
          },
          "role": "flag",
        }
      }
      location={Object {}}
      match={Object {}}
      staticContext={Object {}}
    />
  </div>
</div>
`;

exports[`view controls should match snapshot (default) 1`] = `
<div
  className="c-view-menu__display-box u-flex-right"
>
  <button
    className="c-view-menu__toggle-btn qa-share-poll"
    onClick={[Function]}
  >
    Share
  </button>
  <div
    className="c-view-menu__toggle-btn"
  >
    <PollToggle
      actions={
        Object {
          "formAddOption": [MockFunction],
          "formClearState": [MockFunction],
          "formRemoveOption": [MockFunction],
          "formSetAdd": [MockFunction],
          "formSetTitle": [MockFunction],
          "formToggleConfirm": [MockFunction],
          "formToggleSecret": [MockFunction],
          "listClearState": [MockFunction],
          "listSetSearch": [MockFunction],
          "metaAddErrors": [MockFunction],
          "metaCloseError": [MockFunction],
          "metaCreatePoll": [MockFunction],
          "metaDeletePoll": [MockFunction],
          "metaGetPolls": [MockFunction],
          "metaGetUser": [MockFunction],
          "metaNoOp": [MockFunction],
          "metaSetLoading": [MockFunction],
          "metaSetState": [MockFunction],
          "metaTimeoutError": [MockFunction],
          "pollAddOption": [MockFunction],
          "pollCastVote": [MockFunction],
          "pollRemoveOption": [MockFunction],
          "pollToggleFlag": [MockFunction],
          "pollToggleHide": [MockFunction],
          "pollToggleSecret": [MockFunction],
          "viewClearState": [MockFunction],
          "viewSetAdd": [MockFunction],
          "viewToggleConfirm": [MockFunction],
          "viewToggleSettings": [MockFunction],
        }
      }
      data={
        Object {
          "errors": Array [],
          "form": Object {
            "add": "",
            "confirm": false,
            "options": Array [],
            "secret": false,
            "title": "",
          },
          "list": Object {
            "search": "",
          },
          "loading": 0,
          "polls": Array [],
          "user": Object {},
          "view": Object {
            "add": "",
            "confirm": false,
            "settings": false,
          },
        }
      }
      history={
        Object {
          "push": [MockFunction],
        }
      }
      local={
        Object {
          "poll": Object {
            "author": "",
            "date": 0,
            "id": "",
            "options": Array [],
            "secret": false,
            "title": "",
            "users": Object {
              "created": "",
              "flagged": Array [],
              "hidden": Array [],
              "voted": 0,
            },
          },
          "role": "hide",
        }
      }
      location={Object {}}
      match={Object {}}
      staticContext={Object {}}
    />
  </div>
  <div
    className="c-view-menu__toggle-btn"
  />
</div>
`;
