// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`view menu should match snapshot (created) 1`] = `
<div
  className="c-view-menu"
>
  <button
    className="c-view-menu__control-btn qa-toggle-settings"
    onClick={[Function]}
  >
    Settings
  </button>
  <ViewControls
    actions={
      Object {
        "formAddOption": [MockFunction],
        "formCheckTitle": [MockFunction],
        "formClearState": [MockFunction],
        "formRemoveOption": [MockFunction],
        "formSetAdd": [MockFunction],
        "formSetTitle": [MockFunction],
        "formToggleDelete": [MockFunction],
        "formToggleSecret": [MockFunction],
        "listClearState": [MockFunction],
        "listSetSearch": [MockFunction],
        "metaAddErrors": [MockFunction],
        "metaCloseError": [MockFunction],
        "metaCreatePoll": [MockFunction],
        "metaDeletePoll": [MockFunction],
        "metaGetPolls": [MockFunction],
        "metaGetUser": [MockFunction],
        "metaNoOp": [MockFunction],
        "metaSetLoading": [MockFunction],
        "metaSetState": [MockFunction],
        "metaTimeoutError": [MockFunction],
        "metaToggleDelete": [MockFunction],
        "pollAddOption": [MockFunction],
        "pollCastVote": [MockFunction],
        "pollRemoveOption": [MockFunction],
        "pollRemoveVote": [MockFunction],
        "pollToggleFlag": [MockFunction],
        "pollToggleHide": [MockFunction],
        "pollToggleSecret": [MockFunction],
        "viewClearState": [MockFunction],
        "viewSetAdd": [MockFunction],
        "viewToggleDelete": [MockFunction],
        "viewToggleSettings": [MockFunction],
      }
    }
    data={
      Object {
        "errors": Array [],
        "form": Object {
          "add": "",
          "delete": false,
          "options": Array [],
          "secret": false,
          "title": "",
        },
        "list": Object {
          "search": "",
        },
        "loading": 0,
        "meta": Object {
          "delete": false,
        },
        "polls": Array [],
        "user": Object {
          "auth": Object {
            "id": "",
            "provider": "",
          },
          "data": Object {
            "restricted": false,
          },
          "id": "id-a",
          "name": "",
          "type": "auth",
        },
        "view": Object {
          "add": "",
          "delete": false,
          "settings": false,
        },
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    local={
      Object {
        "poll": Object {
          "author": "",
          "date": 0,
          "id": "",
          "options": Array [],
          "secret": false,
          "title": "",
          "users": Object {
            "created": "id-a",
            "flagged": Array [],
            "hidden": Array [],
          },
          "votes": 0,
        },
      }
    }
    location={Object {}}
    match={Object {}}
    staticContext={Object {}}
  />
</div>
`;

exports[`view menu should match snapshot (created, settings) 1`] = `
<div
  className="c-view-menu"
>
  <button
    className="c-view-menu__control-btn qa-toggle-settings"
    onClick={[Function]}
  >
    Settings
  </button>
  <ViewSettings
    actions={
      Object {
        "formAddOption": [MockFunction],
        "formCheckTitle": [MockFunction],
        "formClearState": [MockFunction],
        "formRemoveOption": [MockFunction],
        "formSetAdd": [MockFunction],
        "formSetTitle": [MockFunction],
        "formToggleDelete": [MockFunction],
        "formToggleSecret": [MockFunction],
        "listClearState": [MockFunction],
        "listSetSearch": [MockFunction],
        "metaAddErrors": [MockFunction],
        "metaCloseError": [MockFunction],
        "metaCreatePoll": [MockFunction],
        "metaDeletePoll": [MockFunction],
        "metaGetPolls": [MockFunction],
        "metaGetUser": [MockFunction],
        "metaNoOp": [MockFunction],
        "metaSetLoading": [MockFunction],
        "metaSetState": [MockFunction],
        "metaTimeoutError": [MockFunction],
        "metaToggleDelete": [MockFunction],
        "pollAddOption": [MockFunction],
        "pollCastVote": [MockFunction],
        "pollRemoveOption": [MockFunction],
        "pollRemoveVote": [MockFunction],
        "pollToggleFlag": [MockFunction],
        "pollToggleHide": [MockFunction],
        "pollToggleSecret": [MockFunction],
        "viewClearState": [MockFunction],
        "viewSetAdd": [MockFunction],
        "viewToggleDelete": [MockFunction],
        "viewToggleSettings": [MockFunction],
      }
    }
    data={
      Object {
        "errors": Array [],
        "form": Object {
          "add": "",
          "delete": false,
          "options": Array [],
          "secret": false,
          "title": "",
        },
        "list": Object {
          "search": "",
        },
        "loading": 0,
        "meta": Object {
          "delete": false,
        },
        "polls": Array [],
        "user": Object {
          "auth": Object {
            "id": "",
            "provider": "",
          },
          "data": Object {
            "restricted": false,
          },
          "id": "id-a",
          "name": "",
          "type": "auth",
        },
        "view": Object {
          "add": "",
          "delete": false,
          "settings": true,
        },
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    local={
      Object {
        "poll": Object {
          "author": "",
          "date": 0,
          "id": "",
          "options": Array [],
          "secret": false,
          "title": "",
          "users": Object {
            "created": "id-a",
            "flagged": Array [],
            "hidden": Array [],
          },
          "votes": 0,
        },
      }
    }
    location={Object {}}
    match={Object {}}
    staticContext={Object {}}
  />
</div>
`;

exports[`view menu should match snapshot (default) 1`] = `
<div
  className="c-view-menu"
>
  <ViewControls
    actions={
      Object {
        "formAddOption": [MockFunction],
        "formCheckTitle": [MockFunction],
        "formClearState": [MockFunction],
        "formRemoveOption": [MockFunction],
        "formSetAdd": [MockFunction],
        "formSetTitle": [MockFunction],
        "formToggleDelete": [MockFunction],
        "formToggleSecret": [MockFunction],
        "listClearState": [MockFunction],
        "listSetSearch": [MockFunction],
        "metaAddErrors": [MockFunction],
        "metaCloseError": [MockFunction],
        "metaCreatePoll": [MockFunction],
        "metaDeletePoll": [MockFunction],
        "metaGetPolls": [MockFunction],
        "metaGetUser": [MockFunction],
        "metaNoOp": [MockFunction],
        "metaSetLoading": [MockFunction],
        "metaSetState": [MockFunction],
        "metaTimeoutError": [MockFunction],
        "metaToggleDelete": [MockFunction],
        "pollAddOption": [MockFunction],
        "pollCastVote": [MockFunction],
        "pollRemoveOption": [MockFunction],
        "pollRemoveVote": [MockFunction],
        "pollToggleFlag": [MockFunction],
        "pollToggleHide": [MockFunction],
        "pollToggleSecret": [MockFunction],
        "viewClearState": [MockFunction],
        "viewSetAdd": [MockFunction],
        "viewToggleDelete": [MockFunction],
        "viewToggleSettings": [MockFunction],
      }
    }
    data={
      Object {
        "errors": Array [],
        "form": Object {
          "add": "",
          "delete": false,
          "options": Array [],
          "secret": false,
          "title": "",
        },
        "list": Object {
          "search": "",
        },
        "loading": 0,
        "meta": Object {
          "delete": false,
        },
        "polls": Array [],
        "user": Object {},
        "view": Object {
          "add": "",
          "delete": false,
          "settings": false,
        },
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    local={
      Object {
        "poll": Object {
          "author": "",
          "date": 0,
          "id": "",
          "options": Array [],
          "secret": false,
          "title": "",
          "users": Object {
            "created": "",
            "flagged": Array [],
            "hidden": Array [],
          },
          "votes": 0,
        },
      }
    }
    location={Object {}}
    match={Object {}}
    staticContext={Object {}}
  />
</div>
`;
