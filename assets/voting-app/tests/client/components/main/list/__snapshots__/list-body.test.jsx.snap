// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`list body should match snapshot (authenticated) 1`] = `
<div
  className="c-list-body"
>
  <div
    className="c-list-body__scroll-view js-scroll-view qa-scroll-view"
    onScroll={[MockFunction]}
  >
    <table
      className="c-list-body__table js-scroll-content"
    >
      <thead>
        <tr>
          <td
            className="c-list-body__col--10"
          >
            <h5>
              Hide
            </h5>
          </td>
          <td
            className="c-list-body__col--10"
          >
            <h5>
              Flag
            </h5>
          </td>
          <td
            className="c-list-body__col--80"
          >
            <h5>
              Description
            </h5>
          </td>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>
            N/A
          </td>
          <td>
            N/A
          </td>
          <td>
            No Polls
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`list body should match snapshot (default) 1`] = `
<div
  className="c-list-body"
>
  <div
    className="c-list-body__scroll-view js-scroll-view qa-scroll-view"
    onScroll={[MockFunction]}
  >
    <table
      className="c-list-body__table js-scroll-content"
    >
      <thead>
        <tr>
          <td
            className="c-list-body__col--10"
          >
            <h5>
              Hide
            </h5>
          </td>
          <td
            className="c-list-body__col--90"
          >
            <h5>
              Description
            </h5>
          </td>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>
            N/A
          </td>
          <td>
            No Polls
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`list body should match snapshot (polls) 1`] = `
<div
  className="c-list-body"
>
  <div
    className="c-list-body__scroll-view js-scroll-view qa-scroll-view"
    onScroll={[MockFunction]}
  >
    <table
      className="c-list-body__table js-scroll-content"
    >
      <thead>
        <tr>
          <td
            className="c-list-body__col--10"
          >
            <h5>
              Hide
            </h5>
          </td>
          <td
            className="c-list-body__col--90"
          >
            <h5>
              Description
            </h5>
          </td>
        </tr>
      </thead>
      <tbody>
        <ListItem
          actions={
            Object {
              "formAddOption": [MockFunction],
              "formCheckTitle": [MockFunction],
              "formClearState": [MockFunction],
              "formRemoveOption": [MockFunction],
              "formSetAdd": [MockFunction],
              "formSetTitle": [MockFunction],
              "formToggleDelete": [MockFunction],
              "formToggleSecret": [MockFunction],
              "listClearState": [MockFunction],
              "listSetSearch": [MockFunction],
              "metaAddErrors": [MockFunction],
              "metaCloseError": [MockFunction],
              "metaCreatePoll": [MockFunction],
              "metaDeletePoll": [MockFunction],
              "metaGetPolls": [MockFunction],
              "metaGetUser": [MockFunction],
              "metaNoOp": [MockFunction],
              "metaSetLoading": [MockFunction],
              "metaSetState": [MockFunction],
              "metaTimeoutError": [MockFunction],
              "metaToggleDelete": [MockFunction],
              "pollAddOption": [MockFunction],
              "pollCastVote": [MockFunction],
              "pollRemoveOption": [MockFunction],
              "pollToggleFlag": [MockFunction],
              "pollToggleHide": [MockFunction],
              "pollToggleSecret": [MockFunction],
              "viewClearState": [MockFunction],
              "viewSetAdd": [MockFunction],
              "viewToggleDelete": [MockFunction],
              "viewToggleSettings": [MockFunction],
            }
          }
          data={
            Object {
              "errors": Array [],
              "form": Object {
                "add": "",
                "delete": false,
                "options": Array [],
                "secret": false,
                "title": "",
              },
              "list": Object {
                "search": "",
              },
              "loading": 0,
              "meta": Object {
                "delete": false,
              },
              "polls": Array [
                Object {
                  "author": "",
                  "date": 0,
                  "id": "",
                  "options": Array [],
                  "secret": false,
                  "title": "",
                  "users": Object {
                    "created": "",
                    "flagged": Array [],
                    "hidden": Array [],
                  },
                  "votes": 0,
                },
              ],
              "user": Object {},
              "view": Object {
                "add": "",
                "delete": false,
                "settings": false,
              },
            }
          }
          history={
            Object {
              "push": [MockFunction],
            }
          }
          key="0-0"
          local={
            Object {
              "poll": Object {
                "author": "",
                "date": 0,
                "id": "",
                "options": Array [],
                "secret": false,
                "title": "",
                "users": Object {
                  "created": "",
                  "flagged": Array [],
                  "hidden": Array [],
                },
                "votes": 0,
              },
            }
          }
          location={Object {}}
          match={Object {}}
          staticContext={Object {}}
        />
      </tbody>
    </table>
  </div>
</div>
`;
